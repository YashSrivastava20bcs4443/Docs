Step 1: FortiGate Firewall Ko Syslog Server Configure Karna
FortiGate CLI Mein Login Karein.

Syslog Server Add Karein.
Aapko FortiGate firewall ko is tarah configure karna hoga taake woh logs ko aapke Logstash server par bheje:

config log syslogd setting
    set status enable
    set server "192.168.1.2"  # Replace with your Logstash server's IP
    set port 514
    set facility local7
    set format default
    set source-ip "192.168.1.x"  # Replace with FortiGate's IP
    set mode udp
    set reliable disable
end

curl -X GET "http://192.168.1.2:9200/_cat/indices?v"



Yahan:

server: Aapke Logstash server ka IP address (192.168.1.2).
port: Syslog ke liye commonly used port, default 514 (UDP).
source-ip: FortiGate firewall ka IP address.

config log syslogd filter
    set severity information
    set forward-traffic enable
    set local-traffic enable
    set multicast-traffic enable
    set sniffer-traffic enable
    set anomaly enable
    set voip enable
    set filter <all>
end

sudo journalctl -u logstash -f

[INFO ][logstash.inputs.udp      ] Starting UDP listener {:address=>"0.0.0.0:514"}
[INFO ][logstash.inputs.udp      ] UDP listener started {:address=>"0.0.0.0:514", :receive_buffer_bytes=>"106496", :queue_size=>"2000"}
[INFO ][logstash.pipeline        ] Pipeline started successfully {:pipeline_id=>"main", :thread=>"#<Thread:0xabcdef run>"}

curl -XGET 'http://localhost:9600/_node/stats/pipelines?pretty'


curl -X GET "http://localhost:9200/_cat/indices?v"

http://localhost:9200/fortigate-logs-*/_count


input {
  udp {
    port => 514
    type => "fortigate"
  }
}

filter {
  if [type] == "fortigate" {
    grok {
      match => {
        "message" => "%{SYSLOG5424PRI:syslog_index} %{WORD:FG_type} %{CISCOTIMESTAMP:FG_time} %{IP:FG_src_ip} %{WORD:FG_action} %{NOTSPACE:FG_service} %{GREEDYDATA:FG_message}"
      }
      tag_on_failure => ["_grokparsefailure"]
    }
    date {
      match => [ "FG_time", "MMM dd HH:mm:ss" ]
      timezone => "UTC"
    }
  }
}

output {
  elasticsearch {
    hosts => ["http://192.168.1.2:9200"]
    index => "fortigate-logs-%{+YYYY.MM.dd}"
  }
  stdout { codec => rubydebug }  # This will print logs to stdout for debugging
}




output {
  elasticsearch {
    hosts => ["https://172.20.10.236:9200"]
    user => "admin"
    password => "xxxxxx"
    cacert => "/path/to/your/certificate.crt"
  }
}

sudo bin/logstash -f logstash.conf


filter {
  if [type] == "fortigate" {
    grok {
      match => { 
        "message" => 'devname="%{DATA:devname}" devid="%{DATA:devid}" eventtime=%{NUMBER:eventtime} tz=%{NUMBER:tz} logid="%{DATA:logid}" type="%{DATA:type}" subtype="%{DATA:subtype}" level="%{DATA:level}" vd="%{DATA:vd}" srcip=%{IP:src_ip} srcport=%{NUMBER:srcport} srcintf="%{DATA:srcintf}" srcintfrole="%{DATA:srcintfrole}" dstip=%{IP:dst_ip} dstport=%{NUMBER:dstport} dstintf="%{DATA:dstintf}" dstintfrole="%{DATA:dstintfrole}" sessionid=%{NUMBER:sessionid} proto=%{NUMBER:proto} action="%{DATA:action}" policyid=%{NUMBER:policyid}'
      }
    }

    # Convert eventtime to @timestamp
    date {
      match => ["eventtime", "UNIX_MS"]
      target => "@timestamp"
    }

    mutate {
      remove_field => ["message", "eventtime"]
    }
  }
}
