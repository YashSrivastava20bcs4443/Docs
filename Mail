import csv
import os
import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from email.mime.image import MIMEImage

def send_email(receiver_email, image_path):
    sender_email = "your_email@example.com"  # Replace with your email address
    sender_password = "your_password"  # Replace with your email password
    
    message = MIMEMultipart()
    message["From"] = sender_email
    message["To"] = receiver_email
    message["Subject"] = "Screenshot Matching"
    
    body = "Screenshot matched for API name. Please find the attached screenshot."
    message.attach(MIMEText(body, "plain"))
    
    with open(image_path, "rb") as attachment:
        image_mime = MIMEImage(attachment.read())
        message.attach(image_mime)
    
    with smtplib.SMTP_SSL("smtp.example.com", 465) as server:  # Replace with your SMTP server details
        server.login(sender_email, sender_password)
        server.sendmail(sender_email, receiver_email, message.as_string())

def match_and_send_screenshot(csv_file, screenshot_folder):
    with open(csv_file, newline='') as csvfile:
        reader = csv.DictReader(csvfile)
        for row in reader:
            api_name = row["API_Name"]
            email_address = row["Owner_Email"]
            for filename in os.listdir(screenshot_folder):
                if filename.startswith(api_name) and filename.endswith(".png"):
                    image_path = os.path.join(screenshot_folder, filename)
                    send_email(email_address, image_path)
                    break

if __name__ == "__main__":
    csv_file = "apis.csv"  # Replace with your CSV file containing API names and emails
    screenshot_folder = "screenshots"  # Folder containing screenshots
    
    match_and_send_screenshot(csv_file, screenshot_folder)
