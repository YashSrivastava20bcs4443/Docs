import requests
import datetime

# Azure AD credentials
tenant_id = 'your_tenant_id'
client_id = 'your_client_id'
client_secret = 'your_client_secret'

# Azure Monitor API endpoint
subscription_id = 'your_subscription_id'
monitor_api_endpoint = f'https://management.azure.com/subscriptions/{subscription_id}/providers/Microsoft.AlertsManagement/alerts?'

# Function to obtain Azure AD access token
def get_access_token(tenant_id, client_id, client_secret):
    token_url = f'https://login.microsoftonline.com/{tenant_id}/oauth2/v2.0/token'
    data = {
        'grant_type': 'client_credentials',
        'client_id': client_id,
        'client_secret': client_secret,
        'scope': 'https://management.azure.com/.default'
    }
    response = requests.post(token_url, data=data)
    return response.json().get('access_token')

# Calculate the time range for the past 12 hours
current_time = datetime.datetime.utcnow()
start_time = current_time - datetime.timedelta(hours=12)
end_time = current_time

# Fetch alerts using Azure Monitor API
access_token = get_access_token(tenant_id, client_id, client_secret)
headers = {
    'Authorization': f'Bearer {access_token}',
    'Content-Type': 'application/json'
}
params = {
    'api-version': '2019-05-05',
    '$filter': f'properties/startTime ge {start_time.isoformat()} and properties/startTime le {end_time.isoformat()}'
}
response = requests.get(monitor_api_endpoint, headers=headers, params=params)

if response.status_code == 200:
    alerts = response.json().get('value', [])
    for alert in alerts:
        print(alert)
else:
    print(f'Error fetching alerts: {response.status_code} - {response.text}')
