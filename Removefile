import paramiko
from datetime import datetime, timedelta

# SFTP server connection details
hostname = "your_sftp_server"
username = "your_username"
password = "your_password"
backup_folder_path = "/path/to/your/backup/folder"

# Connect to the SFTP server
transport = paramiko.Transport((hostname, 22))
transport.connect(username=username, password=password)
sftp = paramiko.SFTPClient.from_transport(transport)

# Get the list of directories in the backup folder
backup_folders = sftp.listdir(backup_folder_path)

# Iterate through each folder and manage backups
for folder in backup_folders:
    folder_path = f"{backup_folder_path}/{folder}"
    files = sftp.listdir_attr(folder_path)
    
    # Sort files by modification time
    files.sort(key=lambda x: x.st_mtime)
    
    # If there are more than 40 files, delete the oldest ones
    if len(files) > 40:
        files_to_delete = files[:-40]
        for file in files_to_delete:
            file_path = f"{folder_path}/{file.filename}"
            sftp.remove(file_path)
            print(f"Deleted: {file_path}")

# Close the SFTP connection
sftp.close()
transport.close()
