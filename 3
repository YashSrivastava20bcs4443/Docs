sudo apt update && sudo apt install -y bird
sudo nano /etc/bird/bird.conf


# Router ID: A unique identifier for this Bird instance.
# Using Bird's IP address (10.250.0.4) instead of the default 198.51.100.1.
router id 10.250.0.4;

# Kernel protocol: Synchronizes Bird's routing table with the OS kernel.
protocol kernel {
    scan time 60;
    import none;  # Don't import routes from the kernel unless needed
    export all;   # Export routes learned via BGP to the kernel
}

# Device protocol: Monitors network interfaces.
protocol device {
    scan time 60;
}

# BGP protocol: Configures peering with MetalLB on k3 (10.250.0.5).
protocol bgp metallb {
    local as 65516;           # Bird's ASN (matches your BGPPeer spec)
    neighbor 10.250.0.5 as 65515;  # MetalLB's IP and ASN
    import all;               # Accept all routes from MetalLB
    export all;               # Advertise all routes to MetalLB (if any)
}

sudo systemctl restart bird
sudo systemctl enable bird
sudo birdc show protocols



curl -sfL https://get.k3s.io | sh -
sudo systemctl status k3s
kubectl get nodes
kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/main/config/manifests/metallb-native.yaml


ipaddresspool.yaml
bgp-advertisement.yaml
bgppeer.yaml

apiVersion: metallb.io/v1beta1
kind: IPAddressPool
metadata:
  name: external-ip-pool
  namespace: metallb-system
spec:
  addresses:
    - 10.0.2.100-10.0.2.120  # Update this to match your desired external IP range


apiVersion: metallb.io/v1beta1
kind: BGPAdvertisement
metadata:
  name: bgp-advertisement
  namespace: metallb-system
spec:
  ipAddressPools:
    - external-ip-pool
  aggregationLength: 32
  localPref: 100


apiVersion: metallb.io/v1beta2
kind: BGPPeer
metadata:
  name: bgp-peer-bird
  namespace: metallb-system
spec:
  myASN: 65515        # MetalLB's ASN
  peerASN: 65516      # Bird's ASN
  peerAddress: 10.250.0.4  # Bird's IP


kubectl apply -f ipaddresspool.yaml
kubectl apply -f bgp-advertisement.yaml
kubectl apply -f bgppeer.yaml

kubectl get ipaddresspool -n metallb-system
kubectl get bgpadvertisement -n metallb-system
kubectl get bgppeer -n metallb-system


kubectl create deployment nginx --image=nginx
kubectl expose deployment nginx --port=80 --type=LoadBalancer
kubectl get svc nginx


apiVersion: v1
kind: Service
metadata:
  name: test-service
spec:
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: test
  type: LoadBalancer

kubectl apply -f test-service.yaml
kubectl get svc test-service
