WITH processed_data AS (
    SELECT 
        -- Convert text date to timestamp for accurate calculations
        TO_TIMESTAMP("contactStartDate", 'YYYY-MM-DD HH24:MI:SS') AS contact_start_time,
        "toAddress",
        "abandoned",
        
        -- Convert text-based preQueueSeconds safely to INTEGER
        COALESCE(NULLIF("preQueueSeconds", '')::FLOAT::INTEGER, 0) AS ivr_duration
        
    FROM contact_data
    WHERE "contactStartDate" IS NOT NULL
)
SELECT 
    DATE_TRUNC('hour', contact_start_time) AS time_interval,  
    COUNT(*) AS offered_calls,  
    SUM(CASE WHEN abandoned = 'true' THEN 1 ELSE 0 END) AS ivr_abandon,
    
    -- IVR abandonment breakdown by duration buckets
    SUM(CASE WHEN ivr_duration BETWEEN 0 AND 30 THEN 1 ELSE 0 END) AS "0-30 Seconds",
    SUM(CASE WHEN ivr_duration BETWEEN 31 AND 60 THEN 1 ELSE 0 END) AS "30-60 Seconds",
    SUM(CASE WHEN ivr_duration BETWEEN 61 AND 120 THEN 1 ELSE 0 END) AS "60-120 Seconds",
    SUM(CASE WHEN ivr_duration > 120 THEN 1 ELSE 0 END) AS ">120 Seconds"

FROM processed_data
GROUP BY time_interval
ORDER BY time_interval;
