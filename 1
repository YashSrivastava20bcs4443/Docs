from PIL import Image

def crop_screenshot(input_path, output_path):
    """
    Crop the part of the image below the blue line.

    Args:
    - input_path (str): Path of the original image.
    - output_path (str): Path to save the cropped image.

    Returns:
    - None
    """
    try:
        with Image.open(input_path) as img:
            width, height = img.size
            crop_top = 110  # Approximate position of blue line
            crop_area = (0, crop_top, width, height)  # Crop area (left, top, right, bottom)
            cropped_img = img.crop(crop_area)
            cropped_img.save(output_path)
            print(f"Cropped image saved at: {output_path}")
    except Exception as e:
        print(f"Error cropping image: {e}")


def take_screenshot(driver, filename):
    """Capture a screenshot, crop it, and save."""
    set_zoom(driver, 0.65)
    time.sleep(10)
    driver.save_screenshot(filename)
    set_zoom(driver, 1)
    
    # Cropping logic
    cropped_filename = "Temp/Cropped_Hitachi_System_Health_screenshot.png"
    crop_screenshot(filename, cropped_filename)
    
    return cropped_filename  # Return cropped file path


    if __name__ == "__main__":
    if not os.path.exists("Temp"):
        os.makedirs("Temp")

    try:
        # Initialize WebDriver
        driver = webdriver.Chrome(service=Service("C:\\Users\\y.s.va22\\Downloads\\syseng_automation\\chromedriver.exe"))
        driver.maximize_window()
        driver.get("https://10.7.251.29/StorageAdvisorEmbedded/#/login")
        
        # Access the system and take a screenshot
        access_system_health(driver, config.SITE_USER, config.SITE_PASSWORD)
        screenshot_filename = "Temp/Hitachi_System_Health_screenshot.png"
        cropped_screenshot_filename = take_screenshot(driver, screenshot_filename)
        
        # Send the cropped screenshot via email
        send_email("yash.srivastava@fareportal.com, 01e15445.fareportal.com@amer.teams.ms", cropped_screenshot_filename)

    finally:
        # Cleanup
        driver.quit()
        shutil.rmtree("Temp")
