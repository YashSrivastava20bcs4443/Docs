import requests
import json

# Connection details
unity_ip = "192.168.x.x"
username = "admin"
password = "your_password"

base_url = f"https://{unity_ip}/api/types"

# Headers for Unity REST API
headers = {
    "X-EMC-REST-CLIENT": "true",
    "Accept": "application/json",
    "Content-Type": "application/json",
}

# Create a session
session = requests.Session()
session.auth = (username, password)
session.headers.update(headers)

# Disable warnings about insecure requests
requests.packages.urllib3.disable_warnings(requests.packages.urllib3.exceptions.InsecureRequestWarning)

def get_csrf_token():
    url = f"{base_url}/system/instances"
    response = session.get(url, verify=False)
    if response.status_code == 200:
        csrf_token = response.headers.get("EMC-CSRF-TOKEN")
        if csrf_token:
            session.headers.update({"EMC-CSRF-TOKEN": csrf_token})
            print("CSRF token retrieved and added to session headers.")
        else:
            print("CSRF token not found in response headers.")
    else:
        response.raise_for_status()

# Fetch CSRF token
get_csrf_token()

def fetch_data(endpoint):
    url = f"{base_url}/{endpoint}/instances"
    response = session.get(url, verify=False)
    if response.status_code == 200:
        return response.json()
    else:
        response.raise_for_status()

endpoints = ["system", "storageResource", "pool", "lun", "nasServer", "fileSystem"]

for endpoint in endpoints:
    print(f"Fetching data from {endpoint}...")
    data = fetch_data(endpoint)
    print(json.dumps(data, indent=4))
