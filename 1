// 3D Bar Chart
function updateChart(data) {
    const barData = [{
        x: ['IVR Offered', 'IVR Abandoned', 'Queue Abandoned', 'Closed by IVR', 'Abandoned in 10 Sec', 'Abandoned in >10 Sec', 'Answered Calls'],
        y: [
            data.ivr_offered || 0,
            data.ivr_abandoned || 0,
            data.queue_abandoned || 0,
            data.closed_by_ivr || 0,
            data.abandoned_in_10_sec || 0,
            data.abandoned_in_over_10_sec || 0,
            data.answered_calls || 0
        ],
        z: [0, 0, 0, 0, 0, 0, 0],
        type: 'bar',
        marker: {
            color: 'rgba(75, 192, 192, 0.6)',
            line: {
                color: 'rgba(75, 192, 192, 1)',
                width: 1
            }
        },
        text: [
            data.ivr_offered || 0,
            data.ivr_abandoned || 0,
            data.queue_abandoned || 0,
            data.closed_by_ivr || 0,
            data.abandoned_in_10_sec || 0,
            data.abandoned_in_over_10_sec || 0,
            data.answered_calls || 0
        ],
        textposition: 'auto'
    }];

    const layout = {
        title: 'Call Statistics (3D Bar)',
        scene: {
            xaxis: { title: 'Categories' },
            yaxis: { title: 'Count', rangemode: 'tozero' },
            zaxis: { title: 'Depth', range: [-1, 1] }
        },
        margin: {
            l: 50,
            r: 20,
            t: 50,
            b: 50
        }
    };

    Plotly.newPlot('summaryChart', barData, layout);
}

// 3D-like Pie Chart
function updatePieChart(data) {
    const pieData = [{
        labels: ['IVR Offered', 'IVR Abandoned', 'Queue Abandoned', 'Closed by IVR', 'Abandoned in 10 Sec', 'Abandoned in > 10 Sec', 'Answered Calls'],
        values: [
            data.ivr_offered || 0,
            data.ivr_abandoned || 0,
            data.queue_abandoned || 0,
            data.closed_by_ivr || 0,
            data.abandoned_in_10_sec || 0,
            data.abandoned_in_over_10_sec || 0,
            data.answered_calls || 0
        ],
        type: 'pie',
        hole: 0.4,
        marker: {
            colors: [
                'rgba(75, 192, 192, 0.6)',
                'rgba(255, 99, 132, 0.6)',
                'rgba(255, 206, 86, 0.6)',
                'rgba(54, 162, 235, 0.6)',
                'rgba(153, 102, 255, 0.6)',
                'rgba(201, 203, 207, 0.6)',
                'rgba(255, 159, 64, 0.6)'
            ],
            line: {
                color: [
                    'rgba(75, 192, 192, 1)',
                    'rgba(255, 99, 132, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(201, 203, 207, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                width: 2
            }
        },
        textinfo: 'percent+label',
        hoverinfo: 'label+percent+value',
        rotation: 45,
        direction: 'clockwise'
    }];

    const layout = {
        title: 'Call Statistics (3D-like Pie)',
        showlegend: true,
        legend: {
            x: 1,
            y: 0.5,
            traceorder: 'normal',
            font: {
                family: 'sans-serif',
                size: 12,
                color: '#000'
            },
            bgcolor: '#E2E2E2',
            bordercolor: '#FFFFFF',
            borderwidth: 2
        },
        margin: {
            l: 40,
            r: 20,
            t: 50,
            b: 50
        }
    };

    Plotly.newPlot('pieChart', pieData, layout);
}

// Resize charts dynamically to fit square containers
function resizeCharts() {
    const charts = ['summaryChart', 'pieChart'];
    charts.forEach(chartId => {
        const chartDiv = document.getElementById(chartId);
        const size = Math.min(chartDiv.clientWidth, chartDiv.clientHeight); // Use smaller dimension for square
        Plotly.relayout(chartId, {
            width: size,
            height: size
        });
    });
}

// Initialize charts and handle resize
document.addEventListener('DOMContentLoaded', () => {
    const sampleData = {
        ivr_offered: 100,
        ivr_abandoned: 20,
        queue_abandoned: 15,
        closed_by_ivr: 30,
        abandoned_in_10_sec: 5,
        abandoned_in_over_10_sec: 10,
        answered_calls: 50
    };
    updateChart(sampleData);
    updatePieChart(sampleData);
    resizeCharts(); // Initial resize

    // Adjust on window resize
    window.addEventListener('resize', resizeCharts);
});
