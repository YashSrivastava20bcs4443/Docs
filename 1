# Function to check compliance on Windows servers remotely
def check_compliance_windows(asset_name):
    compliance = {}

    # OS Version - Save OS version in Excel
    os_command = '(Get-WmiObject -Class Win32_OperatingSystem).Caption'
    os_info, _ = run_powershell_command(asset_name, os_command)
    compliance['OS'] = os_info.strip()

    # SentinelOne Status & SentinelAgent Version
    sentinel_status_command = 'Get-Service -Name "SentinelAgent"'
    sentinel_status, _ = run_powershell_command(asset_name, sentinel_status_command)

    if 'Running' in sentinel_status:
        # Get the version of SentinelAgent if running
        sentinel_version_command = '(Get-Item "C:\\Program Files\\SentinelOne\\Sentinel Agent\\SentinelAgent.exe").VersionInfo.ProductVersion'
        sentinel_version, _ = run_powershell_command(asset_name, sentinel_version_command)
        compliance['SentinelOne'] = f"Running (Version: {sentinel_version.strip()})"
    else:
        compliance['SentinelOne'] = "Not Installed or Not Running"

    # Security Patches - Keep this check
    compliance['Patches'] = check_security_patches(asset_name)

    # NTP Status - Keep this check
    compliance['NTP'] = check_ntp(asset_name)

    # Windows Activation Status
    activation_command = 'powershell "Get-CimInstance -ClassName SoftwareLicensingProduct | Where-Object { $_.PartialProductKey } | Select-Object LicenseStatus"'
    activation_status, _ = run_powershell_command(asset_name, activation_command)

    if '1' in activation_status:
        compliance['WindowsActivation'] = "Activated"
    else:
        compliance['WindowsActivation'] = "Not Activated"

    return compliance

# Load the Excel file and add result columns
def load_excel(file_path):
    wb = openpyxl.load_workbook(file_path)
    sheet = wb.active
    headers = ['OS', 'SentinelOne', 'Patches', 'NTP', 'WindowsActivation']
    for idx, header in enumerate(headers, start=3):
        sheet.cell(row=1, column=idx).value = header
    return wb, sheet

# Main function to iterate over servers and check compliance
def main():
    file_path = 'D:\\VS CODE\\python\\comp\\servers_list.xlsx'
    wb, sheet = load_excel(file_path)

    for row in sheet.iter_rows(min_row=2, max_col=2, values_only=False):
        asset_name = row[0].value
        print(f"Checking {asset_name}...")

        compliance_results = check_compliance_windows(asset_name)

        for idx, (key, result) in enumerate(compliance_results.items(), start=2):
            sheet.cell(row=row[0].row, column=idx + 1).value = result

    wb.save(file_path)
    print("Compliance report generated successfully.")

if __name__ == '__main__':
    main()
