# Define function to fetch alerts
def fetch_alert():
    # Elasticsearch URL for the search query
    e_url = f"{elasticsearch_url}/{common_index}/_search"
    
    # Define payload for the query
    payload = json.dumps({
        "query": {
            "bool": {
                "must": [
                    {
                        "range": {
                            "@timestamp": {
                                "gte": "now-24h",
                                "lte": "now",
                                "format": "MMM d, yyyy @ HH:mm:ss.SSSSSS"
                            }
                        }
                    },
                    {"match": {"EventSource": "SCOM"}},
                    {"match": {"EventTitle.keyword": "Failed to Connect to Computer"}}
                ]
            }
        },
        "sort": [{"@timestamp": {"order": "desc"}}]
    })
    
    # Execute search query and process results
    try:
        result = es.search(index=common_index, body=payload)
        if result['hits']['total']['value'] > 0:
            alerts = result['hits']['hits']
            for record in alerts:
                es_source = record['_source']
                unique_id = record['_id']
                server_name = es_source.get('EventNode', '')
                print("Hostname of the server is:", server_name)
            return alerts  # Return the list of alert records
        else:
            print("No alerts found.")
            return []  # Return an empty list if no alerts are found
    except Exception as e:
        print(f"Error in fetch_alert: {e}")
        return []  # Return an empty list in case of an error
