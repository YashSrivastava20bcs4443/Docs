from statsmodels.tsa.arima.model import ARIMA


# Predictive Analysis with ARIMA
st.subheader("Predictive Analysis (ARIMA Model)")
if not filtered_data.empty:
    daily_alerts = filtered_data.groupby('Day').size().reset_index(name='AlertCount')
    daily_alerts.set_index('Day', inplace=True)

    # Train ARIMA Model
    model = ARIMA(daily_alerts['AlertCount'], order=(1, 1, 1))  # Simple ARIMA configuration
    model_fit = model.fit()

    # Forecast future alerts
    forecast_steps = 30  # Predict next 30 days
    forecast = model_fit.forecast(steps=forecast_steps)
    future_dates = pd.date_range(start=daily_alerts.index[-1] + pd.Timedelta(days=1), periods=forecast_steps)

    # Plot historical and predicted data
    fig, ax = plt.subplots(figsize=(10, 6))
    ax.plot(daily_alerts.index, daily_alerts['AlertCount'], label="Historical Alerts", marker='o')
    ax.plot(future_dates, forecast, label="Predicted Alerts", linestyle='--', marker='x', color='red')
    ax.set_title("Alert Trends and Predictions")
    ax.set_xlabel("Date")
    ax.set_ylabel("Number of Alerts")
    ax.legend()
    st.pyplot(fig)

else:
    st.write("No data available for predictive analysis.")
