import requests
import pandas as pd
import os
from datetime import datetime

# File path for CSV export
file_name = "C:/Temp/PowerBiRefreshHistory_Sept2024.csv"

# Remove the file if it exists
if os.path.exists(file_name):
    os.remove(file_name)

# Power BI API credentials
tenant_id = "xxxx"
pbi_authority_url = f"https://login.windows.net/{tenant_id}/oauth2/token"
pbi_resource_url = "https://analysis.windows.net/powerbi/api"
client_id = "xxxx"
client_secret = "xxxx"

# Authentication to get token
auth_body = {
    'resource': pbi_resource_url,
    'client_id': client_id,
    'grant_type': 'client_credentials',
    'client_secret': client_secret
}
auth_response = requests.post(pbi_authority_url, data=auth_body)
auth_response.raise_for_status()  # Check for errors

# Get the access token
auth_token = auth_response.json().get("access_token")
auth_header = {
    'Content-Type': 'application/json',
    'Authorization': f'Bearer {auth_token}'
}

# Fetching Power BI workspaces (groups)
uri_groups = "https://api.powerbi.com/v1.0/myorg/groups"
groups_response = requests.get(uri_groups, headers=auth_header)
groups_response.raise_for_status()
groups = groups_response.json().get("value", [])

# List to hold dataset information
pbi_datasets = []

# Fetching datasets and refresh history
for group in groups:
    group_id = group.get("id")
    group_name = group.get("name")
    uri_datasets = f"https://api.powerbi.com/v1.0/myorg/groups/{group_id}/datasets"
    datasets_response = requests.get(uri_datasets, headers=auth_header)
    datasets_response.raise_for_status()
    datasets = datasets_response.json().get("value", [])

    for dataset in datasets:
        dataset_id = dataset.get("id")
        report_name = dataset.get("name")
        dataset_owner = dataset.get("configuredBy")
        uri_refreshes = f"https://api.powerbi.com/v1.0/myorg/groups/{group_id}/datasets/{dataset_id}/refreshes"
        
        refreshes_response = requests.get(uri_refreshes, headers=auth_header)
        refreshes_response.raise_for_status()
        refreshes = refreshes_response.json().get("value", [])

        if refreshes:
            last_refresh = refreshes[0]  # Latest refresh info
            refresh_type = last_refresh.get("refreshType")
            if refresh_type in ["Scheduled", "OnDemand"]:
                last_refresh_start = last_refresh.get("startTime")
                last_refresh_end = last_refresh.get("endTime")

                # Append data to the list
                pbi_datasets.append({
                    "WorkSpaceName": group_name,
                    "ReportName": report_name,
                    "DatasetOwner": dataset_owner,
                    "LastRefreshType": refresh_type,
                    "LastRefreshStart": last_refresh_start,
                    "LastRefreshEnd": last_refresh_end
                })

# Exporting the data to CSV
df = pd.DataFrame(pbi_datasets)
df.to_csv(file_name, sep=';', index=False)
