import pandas as pd
import matplotlib.pyplot as plt

# Step 1: Read data from Excel
file_path = 'data.xlsx'  # Replace with your actual file path
sheet_name = 'Sheet1'  # Replace with your Excel sheet name

# Read the Excel file
df = pd.read_excel(file_path, sheet_name=sheet_name)

# Step 2: Clean and process the data
# Clean the @timestamp column
df['@timestamp'] = df['@timestamp'].str.replace('@', '').str.strip()

# Convert the cleaned @timestamp to datetime
df['@timestamp'] = pd.to_datetime(df['@timestamp'], format='%b %d, %Y %H:%M:%S.%f')

# Extract Day and Time
df['Day'] = df['@timestamp'].dt.date
df['Time'] = df['@timestamp'].dt.time

# Step 3: Group by Day for day-wise alerts
daywise_alerts = df.groupby(['Day', 'EventSource', 'EventLevel']).size().reset_index(name='Count')

# Group by Time for time-wise alerts
timewise_alerts = df.groupby(['Time', 'EventSource', 'EventLevel']).size().reset_index(name='Count')

# Step 4: Plot Day-wise Alerts
plt.figure(figsize=(10, 6))
for source in daywise_alerts['EventSource'].unique():
    subset = daywise_alerts[daywise_alerts['EventSource'] == source]
    plt.plot(subset['Day'], subset['Count'], label=source, marker='o')

plt.title('Day-wise Alerts')
plt.xlabel('Day')
plt.ylabel('Count')
plt.legend()
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

# Step 5: Plot Time-wise Alerts
plt.figure(figsize=(10, 6))
for source in timewise_alerts['EventSource'].unique():
    subset = timewise_alerts[timewise_alerts['EventSource'] == source]
    plt.scatter(subset['Time'], subset['Count'], label=source)

plt.title('Time-wise Alerts')
plt.xlabel('Time')
plt.ylabel('Count')
plt.legend()
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

# Optional: Display processed DataFrame
print("Processed DataFrame:")
print(df)
