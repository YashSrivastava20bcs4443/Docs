import pandas as pd
import matplotlib.pyplot as plt
import streamlit as st

# Load the data
file_path = 'data.xlsx'  # Replace with your Excel file path
df = pd.read_excel(file_path)

# Clean the data
df['@timestamp'] = df['@timestamp'].str.replace('@', '').str.strip()
df['@timestamp'] = pd.to_datetime(df['@timestamp'], errors='coerce')
df = df.dropna(subset=['@timestamp'])  # Remove rows with invalid timestamps
df['Day'] = df['@timestamp'].dt.date
df['Hour'] = df['@timestamp'].dt.hour

# Streamlit App
st.title("Interactive Dashboard for Event Analysis")

# Filters
event_sources = df['EventSource'].unique()
selected_source = st.selectbox("Select Event Source:", options=event_sources)

date_range = st.date_input("Select Date Range:", [])
if len(date_range) == 2:
    start_date, end_date = date_range
    df = df[(df['Day'] >= start_date) & (df['Day'] <= end_date)]

# Filter data
filtered_data = df[df['EventSource'] == selected_source]

# Day-wise Analysis
st.subheader("Day-wise Alerts Analysis")
daywise_alerts = filtered_data.groupby(['Day', 'EventLevel']).size().unstack(fill_value=0)
daywise_alerts['Total'] = daywise_alerts.sum(axis=1)

fig, ax = plt.subplots(figsize=(10, 6))
daywise_alerts.drop('Total', axis=1).plot(kind='bar', stacked=True, ax=ax, colormap='tab10')
ax.set_title(f"Day-wise Alerts for Event Source: {selected_source}")
ax.set_xlabel("Day")
ax.set_ylabel("Number of Alerts")
st.pyplot(fig)

# Hourly Analysis
st.subheader("Hourly Alerts Analysis")
hourly_alerts = filtered_data.groupby(['Hour', 'EventTitle']).size().unstack(fill_value=0)

fig, ax = plt.subplots(figsize=(10, 6))
hourly_alerts.plot(kind='bar', stacked=True, ax=ax, colormap='coolwarm')
ax.set_title(f"Hourly Alerts for Event Source: {selected_source}")
ax.set_xlabel("Hour of Day")
ax.set_ylabel("Number of Alerts")
st.pyplot(fig)

# Data Table
st.subheader("Filtered Data")
st.write(filtered_data)
