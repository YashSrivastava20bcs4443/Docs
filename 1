<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<title>Detail Page</title>
<link rel="stylesheet" href="style.css">
</head>
<body>
<header>
<div class="logo">Detail Page</div>
<nav>
<ul>
<li><a href="index.html">Dashboard</a></li>
</ul>
</nav>
</header>
<div class="container">
<!-- Filter Panel -->
<section class="filter-panel">
<div class="filter">
<div>
<label for="start-date">Start Date:</label>
<input type="date" id="start-date" name="start-date">
</div>
<div>
<label for="end-date">End Date: </label>
<input type="date" id="end-date" name="end-date">
</div>
<div>
<label for="portal">Portal:</label>
<select id="portal" name="portal">
<option value="">Select</option>
<option value="CDA">CheapOair</option>
<option value="OT">OneTravel</option>
<option value="CDA SP">CheapOairSP</option>
<option value="COA CA">CheapOairCA</option>
<option value="Other">Other</option>
</select>
</div>
<div>
<label for="tfn-type">TFN Type:</label>
<select id="tfn-type" name="tfn-type">
<option value="">Select</option>
<option value="Mkt">Marketing</option>
<option value="NM">NonMarketing</option>
<option value="Other">Other</option>
</select>
</div>
<div>
<button onclick="applyFilter()">Apply Filter</button>
</div>
</div>
</section>
<!-- Data Table -->
<section>
<table class="data-table">
<thead>
<tr>
<th>TFN</th>
<th>Description</th>
<th>IVR Offered</th>
<th>IVR Abandoned</th>
<th>Queue Abandoned</th>
<th>Closed by IVR</th>
<th>Answered Calls</th>
</tr>
</thead>
<tbody id="data-table-body">
<!-- Dynamic rows will be appended here -->
</tbody>
</table>
<button onclick="downloadCSV()">Download Data</button>
</section>
</div>
<script>
async function fetchDetailData() {
    const urlParams = new URLSearchParams(window.location.search);
    const category = urlParams.get('category');
    const startDate = urlParams.get('startDate');
    const endDate = urlParams.get('endDate');
    const portal = urlParams.get('portal');
    const tfn = urlParams.get('tfn');
    const queryParams = new URLSearchParams({
        category,
        startDate,
        endDate,
        portal,
        tfn
    });
    try {
        const response = await fetch(`http://localhost:3000/api/detail?${queryParams}`);
        if (!response.ok) {
            throw new Error('Network response is not ok');
        }
        const data = await response.json();
        const tableBody = document.getElementById('data-table-body');
        tableBody.innerHTML = ''; // Clear existing rows
        data.forEach(row => {
            const tr = document.createElement('tr');
            tr.innerHTML = `
                <td>${row.TFN}</td>
                <td>${row.Description}</td>
                <td>${row.ivr_offered}</td>
                <td>${row.ivr_abandoned}</td>
                <td>${row.queue_abandoned}</td>
                <td>${row.closed_by_ivr}</td>
                <td>${row.answered_calls}</td>
            `;
            tableBody.appendChild(tr);
        });
    } catch (error) {
        console.error('Error fetching detail data:', error);
    }
}

function downloadCSV() {
    const rows = [['TFN', 'Description', 'IVR Offered', 'IVR Abandoned', 'Queue Abandoned', 'Closed by IVR', 'Answered Calls']];
    document.querySelectorAll('.data-table tbody tr').forEach(tr => {
        const row = [];
        tr.querySelectorAll('td').forEach(td => {
            row.push(td.textContent);
        });
        rows.push(row);
    });
    let csvContent = "data:text/csv;charset=utf-8," 
    + rows.map(e => e.join(",")).join("\n");
    const encodedUri = encodeURI(csvContent);
    const link = document.createElement("a");
    link.setAttribute("href", encodedUri);
    link.setAttribute("download", "detail_data.csv");
    document.body.appendChild(link);
    link.click();
}

function applyFilter() {
    fetchDetailData();
}

window.onload = fetchDetailData;
</script>
</body>
</html>
