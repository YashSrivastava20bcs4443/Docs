import json
import base64
from demo_config import e_password, e_username, elasticsearch_url
from elasticsearch import Elasticsearch
from datetime import datetime, timezone

# Encode authentication header
auth_header = base64.b64encode(f"{e_username}:{e_password}".encode()).decode()

# Elasticsearch index settings
common_index = 'common-events-*'
utc_now = datetime.now(timezone.utc).isoformat()
common_index_name = f'common-events-{datetime.now().strftime("%Y-%m-%d")}'

# Define headers for the request
headers = {
    "Authorization": f"Basic {auth_header}",
    "Content-Type": "application/json"
}

# Initialize Elasticsearch connection
es = Elasticsearch(
    [elasticsearch_url],
    basic_auth=(e_username, e_password),
)

# Define function to fetch alerts
def fetch_alert():
    # Elasticsearch URL for the search query
    e_url = f"{elasticsearch_url}/{common_index}/_search"
    
    # Define payload for the query
    payload = json.dumps({
        "query": {
            "bool": {
                "must": [
                    {
                        "range": {
                            "@timestamp": {
                                "gte": "now-24h",
                                "lte": "now",
                                "format": "MMM d, yyyy @ HH:mm:ss.SSSSSS"
                            }
                        }
                    },
                    {"match": {"EventSource": "SCOM"}},
                    {"match": {"EventTitle.keyword": "Failed to Connect to Computer"}}
                ]
            }
        },
        "sort": [{"@timestamp": {"order": "desc"}}]
    })
    
    # Execute search query and process results
    try:
        result = es.search(index=common_index, body=payload)
        if result['hits']['total']['value'] > 0:
            for record in result['hits']['hits']:
                es_source = record['_source']
                unique_id = record['_id']
                server_name = es_source.get('EventNode', '')
                print("Hostname of the server is:", server_name)
        else:
            print("No alerts found.")
    except Exception as e:
        print(f"Error in fetch_alert: {e}")

# Run the fetch_alert function
fetch_alert()
