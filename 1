app.get('/api/charts', async (req, res) => {
    try {
        const chartsData = {};

        // Queue Status Distribution
        const queueStatusQuery = `
            SELECT 
                CASE 
                    WHEN COALESCE(NULLIF("abandoned", ''), 'False') = 'True' THEN 'Abandoned'
                    WHEN COALESCE(NULLIF("agentSeconds", '')::FLOAT, 0) > 0 THEN 'Answered'
                    ELSE 'IVR Completed'
                END AS status,
                COUNT(*) AS count
            FROM contact_mapped_data
            WHERE "mediaTypeId" = '4'
            GROUP BY status
        `;
        chartsData.queueStatus = (await pool.query(queueStatusQuery)).rows;

        // Average Queue Time Per Campaign
        const avgQueueTimeQuery = `
            SELECT 
                COALESCE("campaign", 'Unknown') AS campaign,
                AVG(COALESCE(NULLIF("inQueueSeconds", '')::FLOAT, 0)) AS avg_queue_time
            FROM contact_mapped_data
            WHERE "mediaTypeId" = '4'
            GROUP BY "campaign"
        `;
        chartsData.avgQueueTime = (await pool.query(avgQueueTimeQuery)).rows;

        // Top 5 Agents By Call Volume
        const topAgentsQuery = `
            SELECT 
                COALESCE("agent", 'Unknown') AS agent,
                COUNT(*) AS call_volume
            FROM contact_mapped_data
            WHERE "mediaTypeId" = '4' AND COALESCE(NULLIF("agentSeconds", '')::FLOAT, 0) > 0
            GROUP BY "agent"
            ORDER BY call_volume DESC
            LIMIT 5
        `;
        chartsData.topAgents = (await pool.query(topAgentsQuery)).rows;

        // Agent Average Handle Time
        const avgHandleTimeQuery = `
            SELECT 
                COALESCE("agent", 'Unknown') AS agent,
                AVG(COALESCE(NULLIF("agentSeconds", '')::FLOAT, 0)) AS avg_handle_time
            FROM contact_mapped_data
            WHERE "mediaTypeId" = '4' AND COALESCE(NULLIF("agentSeconds", '')::FLOAT, 0) > 0
            GROUP BY "agent"
        `;
        chartsData.avgHandleTime = (await pool.query(avgHandleTimeQuery)).rows;

        // Calls By End Reason
        const endReasonQuery = `
            SELECT 
                COALESCE("endReason", 'Unknown') AS end_reason,
                COUNT(*) AS count
            FROM contact_mapped_data
            WHERE "mediaTypeId" = '4'
            GROUP BY "endReason"
        `;
        chartsData.endReason = (await pool.query(endReasonQuery)).rows;

        // Short Abandon Vs Completed Calls
        const shortVsCompletedQuery = `
            SELECT 
                CASE 
                    WHEN COALESCE(NULLIF("abandoned", ''), 'False') = 'True' AND COALESCE(NULLIF("preQueueSeconds", '')::FLOAT, 0) < 10 THEN 'Short Abandon'
                    WHEN COALESCE(NULLIF("agentSeconds", '')::FLOAT, 0) > 0 THEN 'Completed'
                    ELSE 'Other'
                END AS status,
                COUNT(*) AS count
            FROM contact_mapped_data
            WHERE "mediaTypeId" = '4'
            GROUP BY status
        `;
        chartsData.shortVsCompleted = (await pool.query(shortVsCompletedQuery)).rows;

        // Calls Per Campaign
        const callsPerCampaignQuery = `
            SELECT 
                COALESCE("campaign", 'Unknown') AS campaign,
                COUNT(*) AS count
            FROM contact_mapped_data
            WHERE "mediaTypeId" = '4'
            GROUP BY "campaign"
        `;
        chartsData.callsPerCampaign = (await pool.query(callsPerCampaignQuery)).rows;

        // Transfer Type Breakdown
        const transferTypeQuery = `
            SELECT 
                COALESCE("transferType", 'No Transfer') AS transfer_type,
                COUNT(*) AS count
            FROM contact_mapped_data
            WHERE "mediaTypeId" = '4'
            GROUP BY "transferType"
        `;
        chartsData.transferType = (await pool.query(transferTypeQuery)).rows;

        // Calls Routed By Skill
        const callsBySkillQuery = `
            SELECT 
                COALESCE("skill", 'Unknown') AS skill,
                COUNT(*) AS count
            FROM contact_mapped_data
            WHERE "mediaTypeId" = '4'
            GROUP BY "skill"
        `;
        chartsData.callsBySkill = (await pool.query(callsBySkillQuery)).rows;

        console.log('Charts API Response:', chartsData); // Debug: Log the response
        res.json(chartsData);
    } catch (err) {
        console.error('Error fetching charts data:', err);
        res.status(500).json({ error: 'Internal Server Error' });
    }
});
