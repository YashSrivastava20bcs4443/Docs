root@bgp-router-vm:/home/adminuser# birdc show protocols all bgp1
BIRD 1.6.3 ready.
name     proto    table    state  since       info
bgp1     BGP      master   up     05:03:41    Established   
  Preference:     100
  Input filter:   ACCEPT
  Output filter:  ACCEPT
  Routes:         2 imported, 0 exported, 2 preferred
  Route change stats:     received   rejected   filtered    ignored   accepted
    Import updates:              2          0          0          0          2
    Import withdraws:            0          0        ---          0          0
    Export updates:              4          4          0        ---          0
    Export withdraws:            0        ---        ---        ---          0
  BGP state:          Established
    Neighbor address: 10.0.2.4
    Neighbor AS:      65515
    Neighbor ID:      10.0.2.4
    Neighbor caps:    AS4
    Session:          external multihop AS4
    Source address:   10.0.1.5
    Hold timer:       51/90
    Keepalive timer:  21/30

root@bgp-router-vm:/home/adminuser# birdc show route export bgp1
BIRD 1.6.3 ready.

root@k3s-vm:/home/adminuser# kubectl get svc -A
NAME                IPADDRESSPOOLS         IPADDRESSPOOL SELECTORS   PEERS
bgp-advertisement   ["external-ip-pool"]                             ["my-peer"]
root@k3s-vm:/home/adminuser# kubectl get services -A | grep LoadBalancer
default          nginx                     LoadBalancer   10.43.104.238   10.0.2.101    80:32477/TCP                 16h
default          test-service              LoadBalancer   10.43.224.73    <pending>     80:32711/TCP                 14h
kube-system      traefik                   LoadBalancer   10.43.142.243   10.0.2.100    80:32345/TCP,443:30404/TCP   17h
grep "error"/home/adminuser# kubectl logs -n metallb-system daemonset/speaker | g
grep "error"/home/adminuser# kubectl logs -n metallb-system daemonset/speaker | g
root@k3s-vm:/home/adminuser# kubectl get svc -A
NAMESPACE        NAME                      TYPE           CLUSTER-IP      EXTERNAL-IP   PORT(S)                      AGE
default          kubernetes                ClusterIP      10.43.0.1       <none>        443/TCP                      17h
default          nginx                     LoadBalancer   10.43.104.238   10.0.2.101    80:32477/TCP                 16h
default          test-service              LoadBalancer   10.43.224.73    <pending>     80:32711/TCP                 14h
kube-system      kube-dns                  ClusterIP      10.43.0.10      <none>        53/UDP,53/TCP,9153/TCP       17h
kube-system      metrics-server            ClusterIP      10.43.250.211   <none>        443/TCP                      17h
kube-system      traefik                   LoadBalancer   10.43.142.243   10.0.2.100    80:32345/TCP,443:30404/TCP   17h
metallb-system   metallb-webhook-service   ClusterIP      10.43.56.5      <none>        443/TCP                      17h



metallb-system   metallb-webhook-servapply -f bgp-advertisement.yaml        443/T-l app=metallb -f    17h         logs -n metallb-system
{"caller":"main.go:443","event":"serviceAnnounced","ips":["10.0.2.101"],"level":"info","msg":"service has IP, announcing","pool":"external-ip-pool","protocol":"bgp","ts":"2025-03-07T05:22:26Z"}sement -n metallb-system bg
{"caller":"main.go:443","event":"serviceAnnounced","ips":["10.0.2.101"],"level":"info","msg":"service has IP, announcing","pool":"external-ip-pool","protocol":"layer2","ts":"2025-03-07T05:22:26Z"}
{"caller":"bgp_controller.go:362","event":"updatedAdvertisements","ips":["10.0.2.100"],"level":"info","msg":"making advertisements using BGP","numAds":1,"pool":"external-ip-pool","protocol":"bgp","ts":"2025-03-07T05:22:26Z"}
{"caller":"main.go:443","event":"serviceAnnounced","ips":["10.0.2.100"],"level":"info","msg":"service has IP, announcing","pool":"external-ip-pool","protocol":"bgp","ts":"2025-03-07T05:22:26Z"}
{"level":"info","ts":"2025-03-07T05:07:43Z","logger":"controller-runtime.webhook","msg":"Registering webhook","path":"/validate-metallb-io-v1beta2-bgppeer","stacktrace":"sigs.k8s.io/controller-runtime/pkg/webhook.(*DefaultServer).Register\n\t/go/pkg/mod/sigs.k8s.io/controller-runtime@v0.20.1/pkg/webhook/server.go:183\ngo.universe.tf/metallb/internal/k8s/webhooks/webhookv1beta2.(*BGPPeerValidator).SetupWebhookWithManager\n\t/go/go.universe.tf/metallb/internal/k8s/webhooks/webhookv1beta2/bgppeer_webhook.go:41\ngo.universe.tf/metallb/internal/k8s.enableWebhook\n\t/go/go.universe.tf/metallb/internal/k8s/webhook.go:70\ngo.universe.tf/metallb/internal/k8s.New.func3\n\t/go/go.universe.tf/metallb/internal/k8s/k8s.go:340"}
{"level":"info","ts":"2025-03-07T05:07:43Z","logger":"controller-runtime.webhook","msg":"Registering webhook","path":"/validate-metallb-io-v1beta1-bgpadvertisement","stacktrace":"sigs.k8s.io/controller-runtime/pkg/webhook.(*DefaultServer).Register\n\t/go/pkg/mod/sigs.k8s.io/controller-runtime@v0.20.1/pkg/webhook/server.go:183\ngo.universe.tf/metallb/internal/k8s/webhooks/webhookv1beta1.(*BGPAdvertisementValidator).SetupWebhookWithManager\n\t/go/go.universe.tf/metallb/internal/k8s/webhooks/webhookv1beta1/bgpadvertisement_webhook.go:42\ngo.universe.tf/metallb/internal/k8s.enableWebhook\n\t/go/go.universe.tf/metallb/internal/k8s/webhook.go:75\ngo.universe.tf/metallb/internal/k8s.New.func3\n\t/go/go.universe.tf/metallb/internal/k8s/k8s.go:340"}
{"caller":"main.go:443","event":"serviceAnnounced","ips":["10.0.2.100"],"level":"info","msg":"service has IP, announcing","pool":"external-ip-pool","protocol":"layer2","ts":"2025-03-07T05:22:26Z"}
{"caller":"service_controller_reload.go:119","controller":"ServiceReconciler - reprocessAll","end reconcile":"metallbreload/reload","level":"info","ts":"2025-03-07T05:22:26Z"}
{"caller":"layer2_status_controller.go:68","controller":"Layer2StatusReconciler","level":"info","start reconcile":"default/nginx","ts":"2025-03-07T05:22:26Z"}
{"caller":"layer2_status_controller.go:111","controller":"Layer2StatusReconciler","end reconcile":"default/nginx","level":"info","ts":"2025-03-07T05:22:26Z"}
{"caller":"layer2_status_controller.go:68","controller":"Layer2StatusReconciler","level":"info","start reconcile":"kube-system/traefik","ts":"2025-03-07T05:22:26Z"}
{"caller":"layer2_status_controller.go:111","controller":"Layer2StatusReconciler","end reconcile":"kube-system/traefik","level":"info","ts":"2025-03-07T05:22:26Z"}
{"level":"info","ts":"2025-03-07T05:07:43Z","logger":"controller-runtime.webhook","msg":"Registering webhook","path":"/validate-metallb-io-v1beta1-l2advertisement","stacktrace":"sigs.k8s.io/controller-runtime/pkg/webhook.(*DefaultServer).Register\n\t/go/pkg/mod/sigs.k8s.io/controller-runtime@v0.20.1/pkg/webhook/server.go:183\ngo.universe.tf/metallb/internal/k8s/webhooks/webhookv1beta1.(*L2AdvertisementValidator).SetupWebhookWithManager\n\t/go/go.universe.tf/metallb/internal/k8s/webhooks/webhookv1beta1/l2advertisement_webhook.go:41\ngo.universe.tf/metallb/internal/k8s.enableWebhook\n\t/go/go.universe.tf/metallb/internal/k8s/webhook.go:80\ngo.universe.tf/metallb/internal/k8s.New.func3\n\t/go/go.universe.tf/metallb/internal/k8s/k8s.go:340"}
{"level":"info","ts":"2025-03-07T05:07:43Z","logger":"controller-runtime.webhook","msg":"Registering webhook","path":"/validate-metallb-io-v1beta1-community","stacktrace":"sigs.k8s.io/controller-runtime/pkg/webhook.(*DefaultServer).Register\n\t/go/pkg/mod/sigs.k8s.io/controller-runtime@v0.20.1/pkg/webhook/server.go:183\ngo.universe.tf/metallb/internal/k8s/webhooks/webhookv1beta1.(*CommunityValidator).SetupWebhookWithManager\n\t/go/go.universe.tf/metallb/internal/k8s/webhooks/webhookv1beta1/community_webhook.go:41\ngo.universe.tf/metallb/internal/k8s.enableWebhook\n\t/go/go.universe.tf/metallb/internal/k8s/webhook.go:85\ngo.universe.tf/metallb/internal/k8s.New.func3\n\t/go/go.universe.tf/metallb/internal/k8s/k8s.go:340"}
{"level":"info","ts":"2025-03-07T05:07:43Z","logger":"controller-runtime.webhook","msg":"Registering webhook","path":"/validate-metallb-io-v1beta1-bfdprofile","stacktrace":"sigs.k8s.io/controller-runtime/pkg/webhook.(*DefaultServer).Register\n\t/go/pkg/mod/sigs.k8s.io/controller-runtime@v0.20.1/pkg/webhook/server.go:183\ngo.universe.tf/metallb/internal/k8s/webhooks/webhookv1beta1.(*BFDProfileValidator).SetupWebhookWithManager\n\t/go/go.universe.tf/metallb/internal/k8s/webhooks/webhookv1beta1/bfdprofile_webhook.go:40\ngo.universe.tf/metallb/internal/k8s.enableWebhook\n\t/go/go.universe.tf/metallb/internal/k8s/webhook.go:90\ngo.universe.tf/metallb/internal/k8s.New.func3\n\t/go/go.universe.tf/metallb/internal/k8s/k8s.go:340"}
{"level":"info","ts":"2025-03-07T05:07:43Z","logger":"controller-runtime.webhook","msg":"Registering webhook","path":"/convert","stacktrace":"sigs.k8s.io/controller-runtime/pkg/webhook.(*DefaultServer).Register\n\t/go/pkg/mod/sigs.k8s.io/controller-runtime@v0.20.1/pkg/webhook/server.go:183\ngo.universe.tf/metallb/internal/k8s.enableWebhook\n\t/go/go.universe.tf/metallb/internal/k8s/webhook.go:96\ngo.universe.tf/metallb/internal/k8s.New.func3\n\t/go/go.universe.tf/metallb/internal/k8s/k8s.go:340"}
{"level":"info","ts":"2025-03-07T05:07:43Z","logger":"controller-runtime.webhook","msg":"Starting webhook server","stacktrace":"sigs.k8s.io/controller-runtime/pkg/webhook.(*DefaultServer).Start\n\t/go/pkg/mod/sigs.k8s.io/controller-runtime@v0.20.1/pkg/webhook/server.go:191\nsigs.k8s.io/controller-runtime/pkg/manager.(*runnableGroup).reconcile.func1\n\t/go/pkg/mod/sigs.k8s.io/controller-runtime@v0.20.1/pkg/manager/runnable_group.go:226"}
{"level":"info","ts":"2025-03-07T05:07:43Z","logger":"controller-runtime.certwatcher","msg":"Updated current TLS certificate","stacktrace":"sigs.k8s.io/controller-runtime/pkg/certwatcher.(*CertWatcher).ReadCertificate\n\t/go/pkg/mod/sigs.k8s.io/controller-runtime@v0.20.1/pkg/certwatcher/certwatcher.go:211\nsigs.k8s.io/controller-runtime/pkg/certwatcher.New\n\t/go/pkg/mod/sigs.k8s.io/controller-runtime@v0.20.1/pkg/certwatcher/certwatcher.go:71\nsigs.k8s.io/controller-runtime/pkg/webhook.(*DefaultServer).Start\n\t/go/pkg/mod/sigs.k8s.io/controller-runtime@v0.20.1/pkg/webhook/server.go:207\nsigs.k8s.io/controller-runtime/pkg/manager.(*runnableGroup).reconcile.func1\n\t/go/pkg/mod/sigs.k8s.io/controller-runtime@v0.20.1/pkg/manager/runnable_group.go:226"}
{"level":"info","ts":"2025-03-07T05:07:43Z","logger":"controller-runtime.webhook","msg":"Serving webhook server","host":"","port":9443,"stacktrace":"sigs.k8s.io/controller-runtime/pkg/webhook.(*DefaultServer).Start\n\t/go/pkg/mod/sigs.k8s.io/controller-runtime@v0.20.1/pkg/webhook/server.go:242\nsigs.k8s.io/controller-runtime/pkg/manager.(*runnableGroup).reconcile.func1\n\t/go/pkg/mod/sigs.k8s.io/controller-runtime@v0.20.1/pkg/manager/runnable_group.go:226"}
{"level":"info","ts":"2025-03-07T05:07:43Z","logger":"controller-runtime.certwatcher","msg":"Starting certificate poll+watcher","interval":10,"stacktrace":"sigs.k8s.io/controller-runtime/pkg/certwatcher.(*CertWatcher).Start\n\t/go/pkg/mod/sigs.k8s.io/controller-runtime@v0.20.1/pkg/certwatcher/certwatcher.go:133\nsigs.k8s.io/controller-runtime/pkg/webhook.(*DefaultServer).Start.func1\n\t/go/pkg/mod/sigs.k8s.io/controller-runtime@v0.20.1/pkg/webhook/server.go:214"}



root@bgp-router-vm:/home/adminuser# cat /etc/bird/bird.conf
# Set a unique router ID
router id 10.0.1.5;  # VM1 Private IP

# Device protocol (needed for BGP to work)
protocol device {
}

# Kernel protocol (syncs routes with OS)
protocol kernel {
    metric 0;      
    import none;
    export all;  # Ensure BIRD updates the kernel routing table
}

# BGP Configuration
protocol bgp bgp1 {
    local as 65516;
    neighbor 10.0.2.4 as 65515;  # VM2 Private IP
    multihop 2;   # Ensures BGP works across subnets if needed
    hold time 180;
    import all;   # Accept all routes from MetalLB
    export all;   # Advertise all routes to MetalLB
}

#protocol static {
#    route 10.0.2.0/24 via "eth0";
#}

protocol direct {
  interface "lo";
}



root@k3s-vm:/home/adminuser# ip route show
default via 10.0.2.1 dev eth0 proto dhcp src 10.0.2.4 metric 100 
10.0.2.0/24 dev eth0 proto kernel scope link src 10.0.2.4 
10.42.0.0/24 dev cni0 proto kernel scope link src 10.42.0.1 
168.63.129.16 via 10.0.2.1 dev eth0 proto dhcp src 10.0.2.4 metric 100 
169.254.169.254 via 10.0.2.1 dev eth0 proto dhcp src 10.0.2.4 metric 100 
root@k3s-vm:/home/adminuser# kubectl get bgpadvertisements -n metallb-system
NAME                IPADDRESSPOOLS         IPADDRESSPOOL SELECTORS   PEERS
bgp-advertisement   ["external-ip-pool"]                             ["my-peer"]
