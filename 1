import pandas as pd
from statsmodels.tsa.arima.model import ARIMA
from sklearn.metrics import mean_squared_error, r2_score
import matplotlib.pyplot as plt

# CSV file ko load karna
df = pd.read_csv('cpu_memory_data.csv', parse_dates=['Date'], index_col='Date')

# CPU usage ke liye model train karna
cpu_df = df[['CPU_Usage']].dropna()
cpu_model = ARIMA(cpu_df, order=(5,1,0))
cpu_model_fit = cpu_model.fit()

# Memory usage ke liye model train karna
memory_df = df[['Memory_Usage']].dropna()
memory_model = ARIMA(memory_df, order=(5,1,0))
memory_model_fit = memory_model.fit()

# Forecast karna (next 10 days)
cpu_forecast = cpu_model_fit.forecast(steps=10)
memory_forecast = memory_model_fit.forecast(steps=10)

# Forecasting ko train data ke against predict karna
cpu_train_pred = cpu_model_fit.predict(start=0, end=len(cpu_df) - 1)
memory_train_pred = memory_model_fit.predict(start=0, end=len(memory_df) - 1)

# MSE (Mean Squared Error) calculate karna
cpu_mse = mean_squared_error(cpu_df['CPU_Usage'], cpu_train_pred)
memory_mse = mean_squared_error(memory_df['Memory_Usage'], memory_train_pred)

# R2 Score calculate karna
cpu_r2 = r2_score(cpu_df['CPU_Usage'], cpu_train_pred)
memory_r2 = r2_score(memory_df['Memory_Usage'], memory_train_pred)

# Results print karna
print(f'CPU Usage Forecasting - MSE: {cpu_mse}, R2 Score: {cpu_r2}')
print(f'Memory Usage Forecasting - MSE: {memory_mse}, R2 Score: {memory_r2}')

# Forecasting plots
plt.figure(figsize=(14,7))

# CPU plot
plt.subplot(2, 1, 1)
plt.plot(cpu_df.index, cpu_df['CPU_Usage'], label='Actual CPU Usage')
plt.plot(cpu_df.index, cpu_train_pred, color='red', label='Predicted CPU Usage')
plt.plot(pd.date_range(start=cpu_df.index[-1], periods=10, freq='D'), cpu_forecast, color='green', label='Forecast CPU Usage')
plt.title('CPU Usage Forecasting')
plt.legend()

# Memory plot
plt.subplot(2, 1, 2)
plt.plot(memory_df.index, memory_df['Memory_Usage'], label='Actual Memory Usage')
plt.plot(memory_df.index, memory_train_pred, color='red', label='Predicted Memory Usage')
plt.plot(pd.date_range(start=memory_df.index[-1], periods=10, freq='D'), memory_forecast, color='green', label='Forecast Memory Usage')
plt.title('Memory Usage Forecasting')
plt.legend()

plt.tight_layout()
plt.show()
