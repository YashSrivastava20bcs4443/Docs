from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.chrome.service import Service
from pyautogui import moveTo
import time
import os
import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from email.mime.image import MIMEImage
import config

# Function to sign in to the Microsoft account
def sign_in(driver, email, password):
    EMAILFIELD = (By.ID, "i0116")
    PASSWORDFIELD = (By.ID, "i0118")
    NEXTBUTTON = (By.ID, "idSIButton9")

    WebDriverWait(driver, 10).until(EC.element_to_be_clickable(EMAILFIELD)).send_keys(email)
    WebDriverWait(driver, 10).until(EC.element_to_be_clickable(NEXTBUTTON)).click()
    WebDriverWait(driver, 10).until(EC.element_to_be_clickable(PASSWORDFIELD)).send_keys(password)
    WebDriverWait(driver, 10).until(EC.element_to_be_clickable(NEXTBUTTON)).click()

    try:
        stay_signed_in_popup = WebDriverWait(driver, 10).until(
            EC.visibility_of_element_located((By.XPATH, "//div[contains(text(), 'Stay signed in?')]"))
        )
        if stay_signed_in_popup:
            no_button = driver.find_element(By.XPATH, "//input[@value='No']")
            no_button.click()
    except:
        pass

# Function to access the site and log in
def access_site(driver, site_username, site_password):
    try:
        advanced_button = WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.ID, "details-button")))
        advanced_button.click()
        proceed_link = WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.ID, "proceed-link")))
        proceed_link.click()
    except Exception as e:
        print(f"No advanced option found or proceed (unsafe) link: {e}")
    try:
        accept_button = WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, "//button[@name='accept']")))
        accept_button.click()
    except Exception as e:
        print(f"No accept button found: {e}")

    WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.ID, "username"))).send_keys(site_username)
    WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.ID, "password"))).send_keys(site_password)
    WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.ID, "submit"))).click()

# Function to move the mouse and take screenshots
def take_screenshots(driver):
    # Zoom the page to 50%
    driver.execute_script("document.body.style.zoom='50%'")
    time.sleep(1)  # Give the browser some time to apply the zoom

    # Move mouse to specific positions and take screenshots
    positions = [
        (315, 533, "Temp/preallocated_screenshot.png")
    ]

    for (x, y, filename) in positions:
        moveTo(x, y)
        time.sleep(30)  # Wait for 30 seconds
        driver.save_screenshot(filename)

    # Navigate to Performance and Service tabs and take screenshots
    tabs = [
        ("//span[contains(text(), 'Performance')]", "Temp/Performance_screenshot.png"),
        ("//span[contains(text(), 'System View')]", "Temp/System_screenshot.png")
    ]

    for (xpath, filename) in tabs:
        tab_element = WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, xpath)))
        tab_element.click()
        time.sleep(50)  # Wait for 50 seconds
        driver.save_screenshot(filename)

# Function to send email with screenshots
def send_email(owner_email, screenshot_filename):
    smtp_server = "smtp-mail.outlook.com"
    smtp_port = 25
    sender_email = config.SENDER_EMAIL
    password = config.SENDER_PASSWORD

    msg = MIMEMultipart()
    msg['From'] = sender_email
    msg['To'] = owner_email
    msg['Subject'] = "Automated Screenshot"

    body = """
    <html>
        <body>
            <p>Hi team,</p>
            <p><img src="cid:screenshot"></p>
            <p>Thanks & Regards,<br> Yash Srivastava</p>
        </body>
    </html>
    """
    msg.attach(MIMEText(body, "html"))

    with open(screenshot_filename, "rb") as f:
        img = MIMEImage(f.read())
        img.add_header("Content-Disposition", "inline", filename=os.path.basename(screenshot_filename))
        img.add_header("Content-ID", "<screenshot>")
        msg.attach(img)

    with smtplib.SMTP(smtp_server, smtp_port) as server:
        server.starttls()
        server.login(sender_email, password)
        server.send_message(msg)

# Main execution
if __name__ == "__main__":
    # Ensure Temp directory exists
    if not os.path.exists("Temp"):
        os.makedirs("Temp")

    driver = webdriver.Chrome(service=Service("C:\\Users\\y.s.va22\\Downloads\\syseng_automation\\chromedriver.exe"))

    # Maximize the browser window
    driver.maximize_window()

    driver.get('https://login.microsoftonline.com/')
    sign_in(driver, config.LOGIN_USER, config.LOGIN_PASSWORD)

    driver.get("https://10.1.3.96/")
    access_site(driver, config.SITE_USER, config.SITE_PASSWORD)

    time.sleep(60)
    take_screenshots(driver)

    # Send screenshots via email
    screenshots = ["Temp/preallocated_screenshot.png", "Temp/Performance_screenshot.png", "Temp/System_screenshot.png"]
    for screenshot in screenshots:
        send_email("yash.srivastava@fareportal.com", screenshot)

    # Clean up
    driver.quit()
