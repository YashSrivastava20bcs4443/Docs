parameters:
  - name: action
    displayName: "Choose Action"
    type: string
    default: "Deploy"
    values:
      - Deploy
      - Destroy

  - name: os_type
    displayName: "Choose OS Type"
    type: string
    default: "Linux"
    values:
      - Linux
      - Windows

  - name: vm_size
    displayName: "Choose VM Size"
    type: string
    default: "Standard_D2s_v3"
    values:
      - Standard_B1s
      - Standard_B2s
      - Standard_D2s_v3
      - Standard_D4s_v3
      - Standard_E2s_v3
      - Standard_E4s_v3

  - name: nic_count
    displayName: "Number of NICs"
    type: number
    default: 1
    values:
      - 1
      - 2

trigger: none

pool:
  name: 'Self-Hosted'  # Your self-hosted agent pool name

stages:
  - stage: Deploy
    displayName: "Deploy Resources"
    condition: eq('${{ parameters.action }}', 'Deploy')
    jobs:
      - job: DeployTerraform
        displayName: "Terraform Deployment"
        steps:
          - script: |
              terraform --version
            displayName: 'Check Terraform Version'

          - script: |
              terraform init
            displayName: 'Terraform Init'

          - script: |
              terraform plan \
                -var="os_type=${{ parameters.os_type }}" \
                -var="vm_size=${{ parameters.vm_size }}" \
                -var="nic_count=${{ parameters.nic_count }}"
            displayName: 'Terraform Plan'

          - script: |
              terraform apply -auto-approve \
                -var="os_type=${{ parameters.os_type }}" \
                -var="vm_size=${{ parameters.vm_size }}" \
                -var="nic_count=${{ parameters.nic_count }}"
            displayName: 'Terraform Apply'

  - stage: Destroy
    displayName: "Destroy Resources"
    condition: eq('${{ parameters.action }}', 'Destroy')
    jobs:
      - job: DestroyTerraform
        displayName: "Terraform Destroy"
        steps:
          - script: |
              terraform --version
            displayName: 'Check Terraform Version'

          - script: |
              terraform init
            displayName: 'Terraform Init'

          - script: |
              terraform destroy -auto-approve
            displayName: 'Terraform Destroy'
