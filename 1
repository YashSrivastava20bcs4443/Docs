import subprocess

def check_ssh(server_name, port=22):
    # Construct the SSH command with StrictHostKeyChecking disabled
    command = ["ssh", "-vp", str(port), "-o", "StrictHostKeyChecking=no", server_name]
    try:
        # Start the subprocess and capture output in real-time
        process = subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
        
        # Read output line-by-line
        for line in process.stdout:
            print(line.strip())  # Print each line (optional, for debugging)
            # Check for "Connection established"
            if "Connection established" in line:
                print(f"SSH connection successful for {server_name}")
                process.terminate()  # Stop the process if connection is successful
                return True
        
        # Capture the error output after the process ends
        _, stderr = process.communicate()
        
        # If "Connection established" was not found, print the error and return False
        print(f"SSH connection failed for {server_name}")
        print(stderr.strip())  # Print any error messages
        return False
        
    except subprocess.TimeoutExpired:
        print(f"SSH connection to {server_name} timed out")
        return False
    except Exception as e:
        print(f"An error occurred: {e}")
        return False
