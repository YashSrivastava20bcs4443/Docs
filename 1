import os
import time
import shutil
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.service import Service
from PIL import Image  # For combining screenshots

def login_and_open_system_health(driver, ip, username, password):
    """Log into the site and navigate to the System Health page."""
    try:
        # Handle any security warnings
        advanced_button = driver.find_element(By.ID, "details-button")
        advanced_button.click()
        proceed_link = driver.find_element(By.ID, "proceed-link")
        proceed_link.click()
    except:
        print("No security warning.")

    # Perform login
    driver.find_element(By.ID, "username").send_keys(username)
    driver.find_element(By.ID, "password").send_keys(password)
    driver.find_element(By.XPATH, "//button[contains(text(), 'LOG IN')]").click()

    # Navigate to System Health page
    system_health_link = driver.find_element(By.XPATH, "//a[@routerlink='/dashboard/system-health']")
    system_health_link.click()
    time.sleep(10)  # Allow the page to load

def capture_full_page_screenshot(driver, filename):
    """Capture a full-page screenshot using JavaScript scrolling."""
    # Get the total height of the page
    total_height = driver.execute_script("return document.body.scrollHeight")
    viewport_height = driver.execute_script("return window.innerHeight")

    # List to store temporary screenshot paths
    screenshots = []

    for scroll_position in range(0, total_height, viewport_height):
        # Scroll to the next section
        driver.execute_script(f"window.scrollTo(0, {scroll_position});")
        time.sleep(1)  # Wait for rendering

        # Take a screenshot and save it
        screenshot_path = f"Temp/screenshot_{scroll_position}.png"
        driver.save_screenshot(screenshot_path)
        screenshots.append(screenshot_path)

    # Stitch the screenshots into a single image
    stitch_screenshots(screenshots, filename)

def stitch_screenshots(screenshots, output_filename):
    """Combine multiple screenshots into a single image."""
    images = [Image.open(screenshot) for screenshot in screenshots]
    total_width = images[0].width
    total_height = sum(img.height for img in images)

    # Create a new blank image to hold the stitched screenshots
    stitched_image = Image.new('RGB', (total_width, total_height))

    y_offset = 0
    for img in images:
        stitched_image.paste(img, (0, y_offset))
        y_offset += img.height

    stitched_image.save(output_filename)

    # Clean up temporary screenshots
    for screenshot in screenshots:
        os.remove(screenshot)

def main():
    """Main execution logic."""
    # Ensure Temp directory exists
    if not os.path.exists("Temp"):
        os.makedirs("Temp")

    driver = webdriver.Chrome(service=Service("path/to/chromedriver"))
    driver.maximize_window()

    try:
        # Access the System Health page and capture a screenshot
        driver.get("https://10.1.3.96/")
        login_and_open_system_health(driver, "10.1.3.96", "your_username", "your_password")

        # Capture the full page screenshot
        screenshot_filename = "Temp/System_Health_Full_Page.png"
        capture_full_page_screenshot(driver, screenshot_filename)

        print(f"Screenshot saved at {screenshot_filename}")
    finally:
        driver.quit()
        shutil.rmtree("Temp")

if __name__ == "__main__":
    main()
