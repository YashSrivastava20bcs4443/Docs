# Day-wise Alerts
st.subheader("Day-wise Alerts Analysis")
if not filtered_data.empty:
    daywise_alerts = filtered_data.groupby(['Day', 'EventLevel']).size().unstack(fill_value=0)
    daywise_alerts['Total'] = daywise_alerts.sum(axis=1)

    fig, ax = plt.subplots(figsize=(10, 6))
    colors = sns.color_palette("tab20", len(daywise_alerts.columns) - 1)  # Define a color palette
    daywise_alerts.drop('Total', axis=1).plot(
        kind='bar',
        stacked=True,
        ax=ax,
        color=colors  # Pass the list of colors directly
    )
    ax.set_title("Day-wise Alerts Analysis", fontsize=14)
    ax.set_xlabel("Day", fontsize=12)
    ax.set_ylabel("Number of Alerts", fontsize=12)
    ax.legend(title="Event Levels", bbox_to_anchor=(1.05, 1), loc='upper left', fontsize=10)

    # Annotate values for each bar segment
    for bars in ax.containers:
        ax.bar_label(bars, fmt='%d', label_type='center', fontsize=9)

    plt.xticks(rotation=45)
    st.pyplot(fig)
else:
    st.write("No data available for the selected filters.")
