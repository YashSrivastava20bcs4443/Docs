import requests
import json

# Connection details
unity_ip = "192.168.x.x"
username = "admin"
password = "your_password"

base_url = f"https://{unity_ip}/api/types"

# Headers for Unity REST API
headers = {
    "X-EMC-REST-CLIENT": "true",
    "Accept": "application/json",
    "Content-Type": "application/json",
}

# Create a session
session = requests.Session()
session.auth = (username, password)
session.headers.update(headers)

# Disable warnings about insecure requests
requests.packages.urllib3.disable_warnings(requests.packages.urllib3.exceptions.InsecureRequestWarning)

def get_csrf_token():
    url = f"{base_url}/systemCapacity/instances"
    response = session.get(url, verify=False)
    if response.status_code == 200:
        csrf_token = response.headers.get("EMC-CSRF-TOKEN")
        if csrf_token:
            session.headers.update({"EMC-CSRF-TOKEN": csrf_token})
            print("CSRF token retrieved and added to session headers.")
        else:
            print("CSRF token not found in response headers.")
    else:
        response.raise_for_status()

# Fetch CSRF token
get_csrf_token()

def fetch_capacity_data():
    url = f"{base_url}/systemCapacity/instances"
    response = session.get(url, verify=False)
    if response.status_code == 200:
        return response.json()
    else:
        response.raise_for_status()

# Fetch system capacity information
capacity_info = fetch_capacity_data()

# Extract specific capacity details
def extract_capacity_details(data):
    try:
        # Print full response to inspect available fields
        print("Full Response:")
        print(json.dumps(data, indent=4))

        # Access the content part of the response
        entries = data.get('entries', [])
        if entries:
            content = entries[0].get('content', {})
            free_space = content.get('sizeFree', 'N/A')
            preallocated_space = content.get('sizePreallocated', 'N/A')
            used_space = content.get('sizeUsed', 'N/A')

            print(f"System Capacity Details:")
            print(f"Free Space: {free_space}")
            print(f"Preallocated Space: {preallocated_space}")
            print(f"Used Space: {used_space}")
        else:
            print("No entries found in the response.")

    except KeyError as e:
        print("Error extracting capacity details:", e)

# Extract and print capacity details
extract_capacity_details(capacity_info)
